{"ast":null,"code":"import { EDIT_TASK } from \"../actions/types\";\nconst initialState = [{\n  id: 1,\n  title: \"Learn ReactJS\",\n  description: \"let's learn ReactJS\",\n  status: \"Completed\"\n}, {\n  id: 2,\n  title: \"Learn Redux\",\n  description: \"let's learn Redux\",\n  status: \"In Progress\"\n}, {\n  id: 3,\n  title: \"Learn Vue\",\n  description: \"let's learn Redux\",\n  status: \"Unstarted\"\n}];\n\nconst tasks = (state = {\n  tasks: initialState\n}, action) => {\n  /****************************************************************\n   *                      if else version\n   ****************************************************************/\n  //   if (action.type === EDIT_TASK) {\n  //     const { payload } = action;\n  //     return {\n  //       tasks: state.tasks.map((task) => {\n  //         if (task.id === payload.id) {\n  //           return Object.assign({}, task, payload.params);\n  //         }\n  //         return task;\n  //       }),\n  //     };\n  //   }\n\n  /****************************************************************\n   *                    switch version\n   ****************************************************************/\n  const {\n    payload\n  } = action;\n\n  switch (action.type) {\n    case EDIT_TASK:\n      {\n        return {\n          tasks: state.tasks.map(task => {\n            if (task.id === payload.id) {\n              return Object.assign({}, task, payload.params);\n            }\n\n            return task;\n          })\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default tasks;","map":{"version":3,"sources":["/home/nikunj/task-manager/src/reducers/index.js"],"names":["EDIT_TASK","initialState","id","title","description","status","tasks","state","action","payload","type","map","task","Object","assign","params"],"mappings":"AAAA,SAASA,SAAT,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,WAAW,EAAE,qBAHf;AAIEC,EAAAA,MAAM,EAAE;AAJV,CADmB,EAOnB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,WAAW,EAAE,mBAHf;AAIEC,EAAAA,MAAM,EAAE;AAJV,CAPmB,EAanB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,WAAW,EAAE,mBAHf;AAIEC,EAAAA,MAAM,EAAE;AAJV,CAbmB,CAArB;;AAqBA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAG;AAAED,EAAAA,KAAK,EAAEL;AAAT,CAAT,EAAkCO,MAAlC,KAA6C;AACzD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAcD,MAApB;;AACA,UAAQA,MAAM,CAACE,IAAf;AACE,SAAKV,SAAL;AAAgB;AACd,eAAO;AACLM,UAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYK,GAAZ,CAAiBC,IAAD,IAAU;AAC/B,gBAAIA,IAAI,CAACV,EAAL,KAAYO,OAAO,CAACP,EAAxB,EAA4B;AAC1B,qBAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,EAAwBH,OAAO,CAACM,MAAhC,CAAP;AACD;;AACD,mBAAOH,IAAP;AACD,WALM;AADF,SAAP;AAQD;;AACD;AACE,aAAOL,KAAP;AAZJ;AAcD,CAjCD;;AAmCA,eAAeD,KAAf","sourcesContent":["import { EDIT_TASK } from \"../actions/types\";\n\nconst initialState = [\n  {\n    id: 1,\n    title: \"Learn ReactJS\",\n    description: \"let's learn ReactJS\",\n    status: \"Completed\",\n  },\n  {\n    id: 2,\n    title: \"Learn Redux\",\n    description: \"let's learn Redux\",\n    status: \"In Progress\",\n  },\n  {\n    id: 3,\n    title: \"Learn Vue\",\n    description: \"let's learn Redux\",\n    status: \"Unstarted\",\n  },\n];\n\nconst tasks = (state = { tasks: initialState }, action) => {\n  /****************************************************************\n   *                      if else version\n   ****************************************************************/\n  //   if (action.type === EDIT_TASK) {\n  //     const { payload } = action;\n  //     return {\n  //       tasks: state.tasks.map((task) => {\n  //         if (task.id === payload.id) {\n  //           return Object.assign({}, task, payload.params);\n  //         }\n  //         return task;\n  //       }),\n  //     };\n  //   }\n  /****************************************************************\n   *                    switch version\n   ****************************************************************/\n  const { payload } = action;\n  switch (action.type) {\n    case EDIT_TASK: {\n      return {\n        tasks: state.tasks.map((task) => {\n          if (task.id === payload.id) {\n            return Object.assign({}, task, payload.params);\n          }\n          return task;\n        }),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasks;\n"]},"metadata":{},"sourceType":"module"}