{"ast":null,"code":"import { EDIT_TASK, CREATE_TASK } from \"../actions/types\";\nconst initialState = [//   {\n  //     id: 1,\n  //     title: \"Learn ReactJS\",\n  //     description: \"let's learn ReactJS\",\n  //     status: \"Completed\",\n  //   },\n  //   {\n  //     id: 2,\n  //     title: \"Learn Redux\",\n  //     description: \"let's learn Redux\",\n  //     status: \"In Progress\",\n  //   },\n  //   {\n  //     id: 3,\n  //     title: \"Learn Vue\",\n  //     description: \"let's learn Redux\",\n  //     status: \"Unstarted\",\n  //   },\n];\n\nconst tasks = (state = {\n  tasks: initialState\n}, action) => {\n  /****************************************************************\n   *                      if else version\n   ****************************************************************/\n  //   if (action.type === EDIT_TASK) {\n  //     const { payload } = action;\n  //     return {\n  //       tasks: state.tasks.map((task) => {\n  //         if (task.id === payload.id) {\n  //           return Object.assign({}, task, payload.params);\n  //         }\n  //         return task;\n  //       }),\n  //     };\n  //   }\n\n  /****************************************************************\n   *                    switch version\n   ****************************************************************/\n  const {\n    payload\n  } = action;\n\n  switch (action.type) {\n    case EDIT_TASK:\n      {\n        return {\n          tasks: state.tasks.map(task => {\n            if (task.id === payload.id) {\n              return Object.assign({}, task, payload.params);\n            }\n\n            return task;\n          })\n        };\n      }\n\n    case CREATE_TASK:\n      {\n        return {\n          tasks: state.tasks.concat(action.payload)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default tasks;","map":{"version":3,"sources":["/home/nikunj/task-manager/src/reducers/index.js"],"names":["EDIT_TASK","CREATE_TASK","initialState","tasks","state","action","payload","type","map","task","id","Object","assign","params","concat"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AAEA,MAAMC,YAAY,GAAG,CACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBmB,CAArB;;AAqBA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAG;AAAED,EAAAA,KAAK,EAAED;AAAT,CAAT,EAAkCG,MAAlC,KAA6C;AACzD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAcD,MAApB;;AACA,UAAQA,MAAM,CAACE,IAAf;AACE,SAAKP,SAAL;AAAgB;AACd,eAAO;AACLG,UAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYK,GAAZ,CAAiBC,IAAD,IAAU;AAC/B,gBAAIA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAAxB,EAA4B;AAC1B,qBAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,IAAlB,EAAwBH,OAAO,CAACO,MAAhC,CAAP;AACD;;AACD,mBAAOJ,IAAP;AACD,WALM;AADF,SAAP;AAQD;;AACD,SAAKR,WAAL;AAAkB;AAChB,eAAO;AACLE,UAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYW,MAAZ,CAAmBT,MAAM,CAACC,OAA1B;AADF,SAAP;AAGD;;AACD;AACE,aAAOF,KAAP;AAjBJ;AAmBD,CAtCD;;AAwCA,eAAeD,KAAf","sourcesContent":["import { EDIT_TASK, CREATE_TASK } from \"../actions/types\";\n\nconst initialState = [\n  //   {\n  //     id: 1,\n  //     title: \"Learn ReactJS\",\n  //     description: \"let's learn ReactJS\",\n  //     status: \"Completed\",\n  //   },\n  //   {\n  //     id: 2,\n  //     title: \"Learn Redux\",\n  //     description: \"let's learn Redux\",\n  //     status: \"In Progress\",\n  //   },\n  //   {\n  //     id: 3,\n  //     title: \"Learn Vue\",\n  //     description: \"let's learn Redux\",\n  //     status: \"Unstarted\",\n  //   },\n];\n\nconst tasks = (state = { tasks: initialState }, action) => {\n  /****************************************************************\n   *                      if else version\n   ****************************************************************/\n  //   if (action.type === EDIT_TASK) {\n  //     const { payload } = action;\n  //     return {\n  //       tasks: state.tasks.map((task) => {\n  //         if (task.id === payload.id) {\n  //           return Object.assign({}, task, payload.params);\n  //         }\n  //         return task;\n  //       }),\n  //     };\n  //   }\n  /****************************************************************\n   *                    switch version\n   ****************************************************************/\n  const { payload } = action;\n  switch (action.type) {\n    case EDIT_TASK: {\n      return {\n        tasks: state.tasks.map((task) => {\n          if (task.id === payload.id) {\n            return Object.assign({}, task, payload.params);\n          }\n          return task;\n        }),\n      };\n    }\n    case CREATE_TASK: {\n      return {\n        tasks: state.tasks.concat(action.payload),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasks;\n"]},"metadata":{},"sourceType":"module"}