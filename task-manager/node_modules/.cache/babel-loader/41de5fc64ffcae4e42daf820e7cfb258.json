{"ast":null,"code":"var _jsxFileName = \"/home/nikunj/task-manager/src/App.js\";\nimport React from \"react\";\nimport TasksPage from \"./components/TasksPage\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { editTask } from \"./actions\"; //redux\n\nimport { connect } from \"react-redux\";\n\nfunction App(props) {\n  const onStatusChange = (id, status) => {\n    props.dispatch(editTask(id, {\n      status\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TasksPage, {\n    tasks: props.tasks,\n    onStatusChange: onStatusChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/home/nikunj/task-manager/src/App.js"],"names":["React","TasksPage","editTask","connect","App","props","onStatusChange","id","status","dispatch","tasks","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,sCAAP;AACA,SAASC,QAAT,QAAyB,WAAzB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAMC,cAAc,GAAG,CAACC,EAAD,EAAKC,MAAL,KAAgB;AACrCH,IAAAA,KAAK,CAACI,QAAN,CAAeP,QAAQ,CAACK,EAAD,EAAK;AAAEC,MAAAA;AAAF,KAAL,CAAvB;AACD,GAFD;;AAGA,sBACE,uDACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEH,KAAK,CAACK,KAAxB;AAA+B,IAAA,cAAc,EAAEJ,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,MAAMK,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,KAAK,EAAEE,KAAK,CAACF;AADR,GAAP;AAGD,CAJD;;AAMA,eAAeP,OAAO,CAACQ,eAAD,CAAP,CAAyBP,GAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport TasksPage from \"./components/TasksPage\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { editTask } from \"./actions\";\n//redux\nimport { connect } from \"react-redux\";\n\nfunction App(props) {\n  const onStatusChange = (id, status) => {\n    props.dispatch(editTask(id, { status }));\n  };\n  return (\n    <>\n      <TasksPage tasks={props.tasks} onStatusChange={onStatusChange} />\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.tasks,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}